{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","style","color","backgroundColor","borderRadius","BlogList","props","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","datajson","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","useHistory","onSubmit","e","preventDefault","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAoBeA,EAhBA,WACX,OACI,sBAAKC,UAAU,SAAf,UACF,iDACA,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,UAAUC,MAAO,CACxBC,MAAO,QACPC,gBAAiB,UACjBC,aAAc,OAHhB,6BCYOC,EApBE,SAACC,GACX,IAAMC,EAAQD,EAAMC,MACdC,EAAQF,EAAME,MAEvB,OACI,sBAAKT,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,SAAwBS,IACvBD,EAAME,KAAI,SAACC,GAAD,OACP,qBAAKX,UAAU,eAAf,SACI,eAAC,IAAD,CAAMC,GAAE,iBAAYU,EAAKC,IAAzB,UACI,oBAAIZ,UAAU,eAAd,SAA8BW,EAAKF,QACnC,oBAAGT,UAAU,gBAAb,wBAAyCW,EAAKE,cAHnBF,EAAKC,W,OC2BzCE,EAnCE,SAACC,GAAS,IAAD,EAECC,mBAAS,MAFV,mBAEfC,EAFe,KAEVC,EAFU,OAGYF,oBAAS,GAHrB,mBAGfG,EAHe,KAGJC,EAHI,OAIIJ,mBAAS,MAJb,mBAIfK,EAJe,KAIRC,EAJQ,KAgCtB,OA3BAC,qBAAU,WAEN,IAAMC,EAAY,IAAIC,gBAqBtB,OApBAC,YAAW,WACPC,MAAMZ,EAAI,CAAEa,OAAQJ,EAAUI,SAC7BC,MAAK,SAAAC,GACF,IAAIA,EAAIC,GACJ,MAAMC,MAAM,gCAEhB,OAAOF,EAAIG,UAEdJ,MAAK,SAAAK,GAAQ,OAAIhB,EAAQgB,MACzBC,OAAM,SAAAC,GACc,eAAbA,EAAIC,KACJC,QAAQC,IAAI,kBAGhBjB,EAASc,EAAII,SACbpB,GAAa,OAGjBA,GAAa,KACf,KACK,kBAAMI,EAAUiB,WACxB,CAAC1B,IAGG,CAACE,OAAME,YAAWE,UCiBdqB,EA9CF,WAAM,MAQyB5B,EAAS,wEAApCN,EARE,EAQRS,KAAaE,EARL,EAQKA,UAAWE,EARhB,EAQgBA,MAgB/B,OACI,sBAAKrB,UAAU,OAAf,UAOI,0CACEqB,GAAS,8BAAMA,IACfF,GAAa,6CACbX,GAAS,cAAC,EAAD,CAAUA,MAASA,EAAOC,MAAO,kB,OCwBzCkC,EA7DA,WAAO,IAAD,EACS3B,mBAAS,IADlB,mBACVP,EADU,KACHmC,EADG,OAEO5B,mBAAS,IAFhB,mBAEV6B,EAFU,KAEJC,EAFI,OAIiB9B,oBAAS,GAJ1B,mBAIVG,EAJU,KAICC,EAJD,KAKD2B,cAkBhB,OACE,sBAAK/C,UAAU,SAAf,UACE,8BACG,kDAEH,uBAAMgD,SAtBW,SAACC,GACpBA,EAAEC,iBAEF9B,GAAa,IAmBX,UACE,+CAGA,uBACE+B,KAAK,OACLC,UAAQ,EACRC,MAAO5C,EACP6C,SAAW,SAACL,GAAD,OAAOL,EAASK,EAAEM,OAAOF,UAEtC,8CAGA,0BACED,UAAQ,EACRC,MAAOR,EACPS,SAAU,SAACL,GAAD,OAAKH,EAAQG,EAAEM,OAAOF,WAE/BlC,GACD,wBAAQgC,KAAK,SAAb,sBAIAhC,GACA,wBAAQgC,KAAK,SAASK,UAAQ,EAA9B,mCCPGC,EA5CK,WAAO,IAEf7C,EAAO8C,cAAP9C,GAFc,EAGmBE,EAAS,kDAAoDF,GAAxFD,EAHQ,EAGdM,KAAYI,EAHE,EAGFA,MAAOF,EAHL,EAGKA,UACX4B,cAUhB,OACI,sBAAK/C,UAAU,eAAf,UAEQmB,GAAa,mFAGbE,GAAS,sEAAyCA,EAAMmB,QAA/C,OAGT7B,GACA,oCACI,qBAAKX,UAAU,WAAf,SACI,6BACKW,EAAKF,UAGd,8BACKE,EAAKkC,OAEV,wBAAQc,QA3BJ,aA2BJ,2BC3BLC,EAVE,WACb,OACI,gCACI,uCACA,+EACA,4BAAI,iBCoCDC,MAjCf,WAGE,OACE,cAAC,IAAD,CAAQC,SAAUC,WAAlB,SACE,sBAAK/D,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAO,aAAd,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAO,IAAd,SACE,cAAC,EAAD,iBChBCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9df8c762.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n      <h1>Durvesh Malpure</h1>\r\n      <div className=\"links\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/create\" style={{ \r\n          color: 'white', \r\n          backgroundColor: '#f1356d',\r\n          borderRadius: '8px' \r\n        }}>New Blog</Link>\r\n      </div>\r\n    </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = (props) => {\r\n       const blogs = props.blogs;\r\n       const title = props.title;\r\n    //    const handleDelete = props.handleDelete;\r\n    return ( \r\n        <div className=\"blog-list\">\r\n            <div className=\"title\">{title}</div>\r\n            {blogs.map((blog)=>(\r\n                <div className=\"blog-preview\" key={blog.id}>\r\n                    <Link to={`/blogs/${blog.id}`}>\r\n                        <h2 className=\"previewTitle\">{blog.title}</h2>\r\n                        <p className=\"previewAuthor\">Written by {blog.author}</p>\r\n                        {/* <button className=\"delbut\" onClick={()=>handleDelete(blog.id)}>Delete</button> */}\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogList;","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n\r\n    const [data,setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    useEffect(()=>{\r\n        \r\n        const abortCont = new AbortController();\r\n        setTimeout(()=>{\r\n            fetch(url,{ signal: abortCont.signal })\r\n            .then(res => {\r\n                if(!res.ok){\r\n                    throw Error('could not fetch the resource');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(datajson => setData(datajson))\r\n            .catch(err=>{\r\n                if (err.name === 'AbortError'){\r\n                    console.log(\"fetch aborted\");\r\n                }\r\n                else{\r\n                setError(err.message);\r\n                setIsPending(false);\r\n                }\r\n            });\r\n            setIsPending(false);\r\n        },1000);\r\n        return () => abortCont.abort();\r\n    }, [url]);\r\n\r\n    \r\n    return {data, isPending, error};\r\n}\r\n \r\nexport default useFetch;","// import { useEffect, useState } from \"react\";\r\n\r\nimport BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n    // const [name,setName] = useState('mario');\r\n    // const [age,setAge] = useState(69)\r\n    // const handleClick = (e) => {\r\n    //     // console.log(\"hellooo \",e);\r\n    //     setName('peach');\r\n    //     setAge(420);\r\n    // }\r\n    const {data: blogs, isPending, error} = useFetch('https://raw.githubusercontent.com/durvesh8/my-blog/main/data/db.json');\r\n    // const [name,setName] = useState('Durvesh');\r\n    // const handleClickAgain = (name,e) => {\r\n    //     console.log(\"hellooo \",name,e);\r\n    // }\r\n\r\n\r\n    // const handleDelete = (id) => {\r\n    //     const newblogs = blogs.filter(blog=>blog.id!==id);\r\n    //     setBlogs(newblogs);\r\n    //     // setName('Bruh')\r\n    // }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {/* {blogs.map((blog)=>(\r\n                <div className=\"blog-preview\" key={blog.id}>\r\n                    <h2 className=\"previewTitle\">{blog.title}</h2>\r\n                    <p className=\"previewAuthor\">Written by {blog.author}</p>\r\n                </div>\r\n            ))} */}\r\n            <h1>Oh hello</h1>\r\n            { error && <div>{error}</div>}\r\n            { isPending && <div>Loading...</div>}\r\n            { blogs && <BlogList blogs = {blogs} title= \"All Blogs\"/>}\r\n            {/* { blogs && <BlogList blogs = {blogs} title= \"All Blogs\" handleDelete={handleDelete}/>} */}\r\n            {/* <BlogList blogs = {blogs.filter((blog)=>blog.author===\"mario\")} title= \"Mario's blogs\"/> */}\r\n            {/* <h2>Homepage</h2>\r\n            <p>{name} is {age} years old</p>\r\n            <button onClick={handleClick}>Click me</button> */}\r\n            {/* <button onClick={(e) => handleClickAgain('mario',e)}>Click Me Again</button> */}\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Create = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const author = 'Durvesh';\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useHistory();\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const blog = {title , body, author};\r\n      setIsPending(true);\r\n      // fetch('http://localhost:8000/blogs',{\r\n      //   method: 'POST', headers: {\r\n      //     \"Content-type\": \"application/json\"\r\n      //   },\r\n      //   body: JSON.stringify(blog)\r\n      // }).then(()=>{\r\n      //   setIsPending(false);\r\n      //   // history.go(-1);\r\n      //   history.push('/');\r\n      // }\r\n      // )\r\n    }\r\n    \r\n    return (\r\n      <div className=\"create\">\r\n        <div>\r\n           <h2>Add a new blog</h2>     \r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Blog Title\r\n          </label>\r\n          <input \r\n            type=\"text\" \r\n            required \r\n            value={title}\r\n            onChange= {(e) => setTitle(e.target.value)}\r\n          />\r\n          <label>\r\n            Blog Body\r\n          </label>\r\n          <textarea \r\n            required \r\n            value={body}\r\n            onChange={(e)=>setBody(e.target.value)}\r\n          />\r\n          { !isPending &&\r\n            <button type='submit'>\r\n              Add Blog\r\n            </button>\r\n          }\r\n          { isPending &&\r\n            <button type='submit' disabled>\r\n              Adding Blog...\r\n            </button>\r\n          }\r\n        </form>\r\n      </div>\r\n      );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\n\r\nconst BlogDetails = () => {\r\n\r\n    const { id } = useParams();\r\n    const { data: blog, error, isPending } = useFetch('http://durvesh8.github.io/my-blog/data/db.json/' + id);\r\n    const history = useHistory();\r\n\r\n    const handleClick = () =>{\r\n        // fetch('http://localhost:8000/blogs/'+blog.id,{\r\n        //     method: 'DELETE'\r\n        // }).then(()=>{\r\n        //     history.push('/');\r\n        // })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"blog-details\">\r\n            {\r\n                isPending && <div>Loading the freshly fetched blog... 😋</div>\r\n            }\r\n            {\r\n                error && <div> Well somehow this error occured:- {error.message} </div>\r\n            }\r\n            {\r\n                blog && (\r\n                <article>\r\n                    <div className=\"bloghead\">\r\n                        <h2>\r\n                            {blog.title}\r\n                        </h2>\r\n                    </div>\r\n                    <div>\r\n                        {blog.body}\r\n                    </div>\r\n                    <button onClick={handleClick} >delete</button>\r\n                </article>\r\n                )\r\n            }\r\n        {/* <h2>\r\n            Blog Details - {id}\r\n        </h2> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogDetails;","const NotFound = () => {\r\n    return (  \r\n        <div>\r\n            <h1>Uh oh</h1>\r\n            <p>Whatever you were looking for doesn't exist :(</p>\r\n            <p>{\"\\\\{^_^}/\"}</p>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default NotFound;\r\n","import Navbar from './Navbar';\n// import './App.css';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  // const title = \"Durvesh's Blog\";\n  // const link = \"https://github.com\"\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Navbar/>\n        \n        <div className=\"content\"> \n          <Switch>\n            <Route exact path=\"/\">\n              <Home/>\n            </Route>\n            <Route exact path=\"/create\">\n              <Create/>\n            </Route>\n            <Route path = \"/blogs/:id\">\n              <BlogDetails/>\n            </Route>\n            <Route path = \"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n          {/* <Home/> */}\n          {/* <h1>{title}</h1>\n          <p>{Math.random()}</p>\n          <a href={link}>GitHub</a> */}\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}